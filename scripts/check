#!/bin/bash

ROOT="$(realpath $(dirname $BASH_SOURCE)/..)"

set -e

. ${ROOT}/../zephyr/zephyr-env.sh

print_usage(){
    echo "Usage: $1 -c <commit range> -h -v"
}

# If running on CI then set default commit range to compare
# target branch of MR with tip of current branch
if [[ -v CI_MERGE_REQUEST_TARGET_BRANCH_NAME ]];
then
    git fetch origin $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    COMMIT_RANGE="origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME..HEAD";
else
    COMMIT_RANGE="HEAD~1..HEAD"
fi

VERBOSE=0

# Parse arguments (standard way of doing it in bash)
while [[ $# -gt 0 ]]; do
    case $1 in
    -a|--all)
        COMMIT_RANGE="$(git rev-list HEAD | tail -n 1)..HEAD"
        shift
        ;;
    -c|--commits)
        COMMIT_RANGE="$2"
        shift
        shift
        ;;
    -v|--verbose)
        VERBOSE=1
        shift
        ;;
    -*|--*)
        echo "Unknown option: $1"
        print_usage
        exit 1
        ;;
    -h|--help)
        print_usage
        exit 0
        ;;
    *)
        POS_ARGS+=("$1")
        shift
        ;;
    esac
done

echo -e "Checking COMMIT_RANGE: ${COMMIT_RANGE}"
git log --oneline --graph --decorate --abbrev-commit ${COMMIT_RANGE}
echo -e "---------------------------------------------------"

./scripts/ci/check_compliance.py \
    -e Gitlint \
    -e Identity \
    -e Nits \
    -c $COMMIT_RANGE || {
    echo "Checking compliance failed"
    exit 1
}
